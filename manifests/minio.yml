---
instance_groups:
  - name:      minio
    instances: 1
    azs:       (( grab params.availability_zones || meta.default.azs ))
    stemcell:  default
    networks:
      - name: (( grab params.network || "minio"))
        static_ips: (( static_ips 0 ))
    vm_type:   (( grab params.vm_type || "default" ))
    persistent_disk_type: (( grab params.minio_disk_type || "minio" )) 
    jobs:
    - name: minio-server
      release: minio
      templates:
      - name: minio-server
      properties:
        credential:
          accesskey: (( vault meta.vault "/access_token:accesskey" ))
          secretkey: (( vault meta.vault "/access_token:secretkey" ))
        port: 9000
    properties:
      debug: false



  - name:      nginx
    instances: 1
    azs:       (( grab params.availability_zones || meta.default.azs ))
    stemcell:  default
    networks:
      - name: (( grab params.network || "minio"))
        static_ips: (( static_ips 1 ))
    vm_type:   (( grab params.vm_type || "default" ))
    persistent_disk_type: (( grab params.nginx_disk_type || "small" ))
    jobs:
    - name: nginx
      release: nginx
      properties:
        pre_start: |
          #!/bin/bash
          JOB_NAME=nginx
          BASE_DIR=/var/vcap
          JOB_DIR=$BASE_DIR/jobs/$JOB_NAME
          CONFIG_DIR=$JOB_DIR/etc
        ssl_key: (( vault meta.vault "/ssl/server:key" ))
        ssl_chained_cert:  (( vault meta.vault "/ssl/server:certificate" ))
        nginx_conf: (( concat meta.nginx_config.first_half "listen " meta.nginx_config.port " default_server ssl;\n" meta.nginx_config.second_half "set $upstream" " " instance_groups.minio.networks.0.static_ips.0 ";\n" meta.nginx_config.location ))

update:
  serial:            false
  canaries:          1
  max_in_flight:     1
  max_errors:        1
  canary_watch_time: 5000-600000
  update_watch_time: 5000-600000

stemcells:
  - alias:   default
    os:      (( grab params.stemcell_os      || "ubuntu-trusty" ))
    version: (( grab params.stemcell_version || "latest" ))

releases:
  - name: "minio"
    version: "2018-04-27T23-33-52Z"
    url: "https://bosh.io/d/github.com/minio/minio-boshrelease?v=2018-04-27T23-33-52Z"
    sha1: "b45b8c7790e96d3600f5a61b076f26a703c76953"
  - name: "nginx"
    version: "1.13.12"
    url: "https://bosh.io/d/github.com/cloudfoundry-community/nginx-release?v=1.13.12"
    sha1: "bf156c545c45ed4e57563274f91dbd433000d776" 

meta:
  default:
    azs: [z1]
  nginx_config:
    port: (( grab params.port || 443 ))

    first_half: |
      user nobody vcap;
      worker_processes  1;
      error_log /var/vcap/sys/log/nginx/error.log   info;
      events {
        worker_connections  1024;
      }
      http {
        server_tokens off;
        server {
          listen 80;
          return 301 https://$host$request_uri;
        }
        server {

    second_half: |
      ssl_certificate     /var/vcap/jobs/nginx/etc/ssl_chained.crt.pem;
      ssl_certificate_key /var/vcap/jobs/nginx/etc/ssl.key.pem;
      ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
      ssl_ciphers         HIGH:!aNULL:!MD5;

    location: |
      location / {
        proxy_pass_request_headers on;
        proxy_pass http://$upstream:9000;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_buffering off;
        client_max_body_size 0;
        proxy_read_timeout 36000s;
        proxy_redirect off;
          }
        }
      }

exodus:
  url: (( concat "https://" params.external_domain ":" params.port ))
